(function () {
    "use strict";

    var popup = function (options) {
        var popEl;
        if (typeof options == "object" && options != null) {
            this.options = this.prepareOptions(options);
            popEl = document.getElementById("popupBlack").querySelector("#" + this.options.popupId);
            if (popEl != null) {
                popEl.popupObject.options = this.options;
                popEl.popupObject.init();
                return popEl.popupObject;
            } else {
                this.el = document.getElementById("popupTemplate")
                .getElementsByClassName("popup")[0].cloneNode(true);
                this.el.popupObject = this;
                this.init();
            }
        } else if (typeof options == "string") {
            popEl = document.getElementById(options);
            if (popEl != null) {
                return popEl.popupObject;
            } else {
                throw "no popup with id:" + options + " exists";
            }
        } else {
            throw "you should add options parameter";
        }
    }

    popup.prototype = function () {
        var defaults = {
            popupId: "",
            title: "",
            content: "",
            primaryBtnText: "Ok",
            primaryBtnCallBack: null,
            primaryBtnDisabled: false,
            secondaryBtnText: "Cancel",
            secondaryBtnCallBack: null,
            secondaryBtnVisible: true,
            secondaryBtnDisabled: false,
            hideOnPrimaryClick: true,
            hideOnSecondaryClick: true,
            aroundClickable: true,
            onAroundClick: null
        },
            visiblePopup = null,
            availablePopups = [];

        function show(callBack) {
            if (visiblePopup == null) {
                visiblePopup = this;
                var el = this.el;
                var self = this;
                document.getElementById("popupBlack").style.display = "block";
                el.style.display = "inline-block";
                if (typeof self.onBeforeShow == "function") {
                	setTimeout(function () {
                		self.onBeforeShow();
                	});
                }
                setTimeout(function () {
                    document.getElementById("popupBlack").style.opacity = 1;
                    setTimeout(function () {
                        if (typeof self.onShow == "function") {
                            self.onShow();
                        }
                        if (typeof callBack == "function") {
                            callBack();
                        }
                    }, 300);
                }, 50);
            } else {
                console.warn("popup with id:" + this.el.id + " is visible");
            }
        }

        function hideAnimation(el, callBack) {
            document.getElementById("popupBlack").style.opacity = 0;
//            el.style.webkitTransform = "scale(0.7)";
            setTimeout(function () {
                el.style.display = "none";
                document.getElementById("popupBlack").style.display = "none";

                for (var i = 0; i < availablePopups.length; i++) {
                    availablePopups[i].el.style.display = "none";
//                    availablePopups[i].el.style.webkitTransform = "scale(0.7)";
                }
                visiblePopup = null;
                if (typeof el.popupObject.onHide == "function") {
                    el.popupObject.onHide();
                }
                if (typeof callBack == "function") {
                    callBack();
                }
            }, 300);
        }

        function aroundClick() {
            if (visiblePopup.options.aroundClickable) {
                hide(visiblePopup.options.onAroundClick);
            }
        }

        function hide(callBack) {
            if (visiblePopup != null) {
                var el = visiblePopup.el;
                if (this instanceof Popup) {
                    if (this.options.popupId == visiblePopup.options.popupId) {
                        hideAnimation(el, callBack);
                    } else {
                    	if (typeof callBack == "function") {
                            callBack();
                        }
                        console.warn("popup with id:" + this.options.popupId + " is not visible. The current visible popup has id:" + visiblePopup.options.popupId);
                    }
                } else {
                    hideAnimation(el, callBack);
                }
            } else {
            	if (typeof callBack == "function") {
                    callBack();
                }
                console.warn("no popups visible");
            }
        }

        function disableActionBtns() {
            this.el.getElementsByClassName("popupBtns")[0].className = "popupBtns disabled";
        }

        function enableActionBtns() {
            this.el.getElementsByClassName("popupBtns")[0].className = "popupBtns";
        }

        function prepareOptions(options) {
            if (options.title == undefined || options.title == "") {
                throw "title option is mandatory";
            }
            if (options.popupId == undefined || options.popupId == "") {
                throw "popupId option is mandatory";
            }
            if (options.content == undefined || options.content == "") {
                options.content = defaults.content;
            }
            if (options.primaryBtnText == undefined || options.primaryBtnText == "") {
                options.primaryBtnText = defaults.primaryBtnText;
            }
            if (options.secondaryBtnText == undefined || options.secondaryBtnText == "") {
                options.secondaryBtnText = defaults.secondaryBtnText;
            }
            if (options.secondaryBtnCallBack == undefined) {
                options.secondaryBtnCallBack = defaults.secondaryBtnCallBack;
            }
            if (options.primaryBtnCallBack == undefined) {
                options.primaryBtnCallBack = defaults.primaryBtnCallBack;
            }
            if (options.secondaryBtnVisible == undefined || typeof options.secondaryBtnVisible != "boolean") {
                options.secondaryBtnVisible = defaults.secondaryBtnVisible;
            }
            if (options.primaryBtnDisabled == undefined || typeof options.primaryBtnDisabled != "boolean") {
                options.primaryBtnDisabled = defaults.primaryBtnDisabled;
            }
            if (options.secondaryBtnDisabled == undefined || typeof options.secondaryBtnDisabled != "boolean") {
                options.secondaryBtnDisabled = defaults.secondaryBtnDisabled;
            }
            if (options.aroundClickable == undefined || typeof options.aroundClickable != "boolean") {
                options.aroundClickable = defaults.aroundClickable;
            }
            if (options.hideOnPrimaryClick == undefined || typeof options.hideOnPrimaryClick != "boolean") {
                options.hideOnPrimaryClick = defaults.hideOnPrimaryClick;
            }
            if (options.hideOnSecondaryClick == undefined || typeof options.hideOnSecondaryClick != "boolean") {
                options.hideOnSecondaryClick = defaults.hideOnSecondaryClick;
            }
            if (options.onAroundClick == undefined) {
                options.onAroundClick = defaults.onAroundClick;
            }

            return addObservers(options);
        }

        function addObservers(options) {
            return {
                _title: options.title,
                get title() { return this._title; },
                set title(value) {
                    if (value == undefined || value == "") {
                        console.warn("invalid title value");
                        return;
                    }
                    this._title = value;
                    document.getElementById(this.popupId).querySelector(".popupHeader").textContent = value;
                },
                ////////////////////////////////////////////
                _content: options.content,
                get content() { return this._content; },
                set content(value) {
                    if (value == undefined) {
                        console.warn("invalid content value");
                        return;
                    }
                    this._content = value;
                    document.getElementById(this.popupId).querySelector(".popupContent").innerHTML = value;
                },
                ////////////////////////////////////////////
                _primaryBtnText: options.primaryBtnText,
                get primaryBtnText() { return this._primaryBtnText; },
                set primaryBtnText(value) {
                    if (value == undefined) {
                        console.warn("invalid primaryBtnText value");
                        return;
                    }
                    this._primaryBtnText = value;
                    document.getElementById(this.popupId).querySelector(".okBtn").textContent = value;
                },
                ////////////////////////////////////////////
                _secondaryBtnText: options.secondaryBtnText,
                get secondaryBtnText() { return this._secondaryBtnText; },
                set secondaryBtnText(value) {
                    if (value == undefined) {
                        console.warn("invalid secondaryBtnText value");
                        return;
                    }
                    this._secondaryBtnText = value;
                    document.getElementById(this.popupId).querySelector(".cancelBtn").textContent = value;
                },
                ////////////////////////////////////////////
                _secondaryBtnCallBack: options.secondaryBtnCallBack,
                get secondaryBtnCallBack() { return this._secondaryBtnCallBack; },
                set secondaryBtnCallBack(value) {
                    if (value === undefined) {
                        console.warn("invalid secondaryBtnCallBack value");
                        return;
                    }
                    this._secondaryBtnCallBack = value;
                },
                ////////////////////////////////////////////
                _primaryBtnCallBack: options.primaryBtnCallBack,
                get primaryBtnCallBack() { return this._primaryBtnCallBack; },
                set primaryBtnCallBack(value) {
                    if (value == undefined) {
                        console.warn("invalid primaryBtnCallBack value");
                        return;
                    }
                    this._primaryBtnCallBack = value;
                },
                ////////////////////////////////////////////
                _popupId: options.popupId,
                get popupId() { return this._popupId; },
                set popupId(value) {
                    console.warn("cannot change popupId value");
                    return;
                },
                ////////////////////////////////////////////
                _secondaryBtnVisible: options.secondaryBtnVisible,
                get secondaryBtnVisible() { return this._secondaryBtnVisible; },
                set secondaryBtnVisible(value) {
                    if (value == undefined) {
                        console.warn("cannot change secondaryBtnVisible value");
                        return;
                    }
                    this._secondaryBtnVisible = value;
                    if (!value) {
                        document.getElementById(this.popupId).querySelector(".cancelBtn").style.display = "none";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.left = "0px";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.right = "0px";
//                        document.getElementById(this.popupId).querySelector(".okBtn").style.width = "95%";
                    } else {
                        document.getElementById(this.popupId).querySelector(".cancelBtn").style.display = "block";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.left = "";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.right = "";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.width = "";
                        document.getElementById(this.popupId).querySelector(".okBtn").style.marginLeft = "";

                    }
                },
                ////////////////////////////////////////////
                _primaryBtnDisabled: options.primaryBtnDisabled,
                get primaryBtnDisabled() { return this._primaryBtnDisabled; },
                set primaryBtnDisabled(value) {
                    if (value == undefined) {
                        console.warn("cannot change actionBtnsDisabled value");
                        return;
                    }
                    this._primaryBtnDisabled = value;
                    if (value) {
                        document.getElementById(this.popupId).querySelector(".okBtn").className = "okBtn disabled";
                    } else {
                        document.getElementById(this.popupId).querySelector(".okBtn").className = "okBtn";
                    }
                },
                /////////////////////////////////////////////
                _secondaryBtnDisabled: options.secondaryBtnDisabled,
                get secondaryBtnDisabled() { return this._secondaryBtnDisabled; },
                set secondaryBtnDisabled(value) {
                    if (value == undefined) {
                        console.warn("cannot change actionBtnsDisabled value");
                        return;
                    }
                    this._secondaryBtnDisabled = value;
                    if (value) {
                        document.getElementById(this.popupId).querySelector(".cancelBtn").className = "cancelBtn disabled";
                    } else {
                        document.getElementById(this.popupId).querySelector(".cancelBtn").className = "cancelBtn";
                    }
                },
                ////////////////////////////////////////////
                _aroundClickable: options.aroundClickable,
                get aroundClickable() { return this._aroundClickable; },
                set aroundClickable(value) {
                    if (value == undefined) {
                        console.warn("cannot change aroundClickable value");
                        return;
                    }
                    if (value) {
                        document.getElementById(this.popupId).querySelector(".mdi-close").style.display = "block";
                    } else {
                        document.getElementById(this.popupId).querySelector(".mdi-close").style.display = "none";
                    }
                    this._aroundClickable = value;
                },
                ////////////////////////////////////////////
                _onAroundClick: options.onAroundClick,
                get onAroundClick() { return this._onAroundClick; },
                set onAroundClick(value) {
                    if (value == undefined) {
                        console.warn("cannot change aroundClickable value");
                        return;
                    }
                    this._onAroundClick = value;
                },
                ////////////////////////////////////////////
                _hideOnPrimaryClick: options.hideOnPrimaryClick,
                get hideOnPrimaryClick() { return this._hideOnPrimaryClick; },
                set hideOnPrimaryClick(value) {
                    if (value == undefined || typeof value != "boolean") {
                        console.warn("cannot change aroundClickable value");
                        return;
                    }
                    this._hideOnPrimaryClick = value;
                },
                ////////////////////////////////////////////
                _hideOnSecondaryClick: options.hideOnSecondaryClick,
                get hideOnSecondaryClick() { return this._hideOnSecondaryClick; },
                set hideOnSecondaryClick(value) {
                    if (value == undefined || typeof value != "boolean") {
                        console.warn("cannot change aroundClickable value");
                        return;
                    }
                    this._hideOnSecondaryClick = value;
                }
            }
        }



        function init() {
            if (!document.getElementById("PopupContainer")) {
                throw "Popup class is not initialized. Call Popup.initialize()";
            }
            var self = this;
            self.el.id = self.options.popupId;
            self.el.querySelector(".popupHeader").textContent = self.options.title;
            self.el.querySelector(".popupContent").innerHTML = self.options.content;
            //self.el.style.height = self.options.height + "px";
            self.el.querySelector(".okBtn").textContent = self.options.primaryBtnText;
            self.el.querySelector(".cancelBtn").textContent = self.options.secondaryBtnText;
            if (!self.options.secondaryBtnVisible) {
                self.el.querySelector(".cancelBtn").style.display = "none";
                self.el.querySelector(".okBtn").style.left = "0px";
                self.el.querySelector(".okBtn").style.right = "0px";
//                self.el.querySelector(".okBtn").style.width = "95%";
            }else{
            	self.el.querySelector(".okBtn").style.marginLeft = "10px";
            }
            if (self.options.primaryBtnDisabled) {
                self.el.querySelector(".okBtn").className = "okBtn disabled";
            }
            if (self.options.secondaryBtnDisabled) {
                self.el.querySelector(".cancelBtn").className = "cancelBtn disabled";
            }

            if (self.options.aroundClickable) {
              self.el.querySelector(".mdi-close").setAttribute("alt", "close popup");
            } else {
            	self.el.querySelector(".mdi-close").style.display = "none";
            }

            self.el.querySelector(".cancelBtn").onclick = function () {
                if (self.options.hideOnSecondaryClick) {
                    hide(self.options.secondaryBtnCallBack);
                } else {
                    self.options.secondaryBtnCallBack();
                }
            }

            self.el.querySelector(".mdi-close").onclick = function () {
            	if (self.options.aroundClickable) {
                    hide(self.options.onAroundClick);
                }
            }

            self.el.querySelector(".okBtn").onclick = function () {
                if (self.options.hideOnPrimaryClick) {
                    hide(self.options.primaryBtnCallBack);
                } else {
                    self.options.primaryBtnCallBack();
                }
            };
            if (!document.getElementById(self.options.popupId)) {
                document.getElementById("popupBlack").appendChild(self.el);
                availablePopups.push(self.el.popupObject);
            }
        }

        popup.VisiblePopup = function(){
        	return visiblePopup;
        }

        popup.hide = hide;
        popup.initialize = function () {
            var popupContainerTemplate = '<div id="PopupContainer"><div id="popupBlack"></div><div id="popupTemplate" style="display: none;"><div class="popup"><div class="popupHeader"></div><div class="popupContent"></div><div class="popupBtns"><div class="cancelBtn">Cancel</div><div class="okBtn">Ok</div></div><i class="mdi mdi-close"></i></div></div></div>';
            var popupContainer = document.createElement("div");
            popupContainer.innerHTML = popupContainerTemplate;
            popupContainer.querySelector("#popupBlack").onclick = function (e) {
                e.stopPropagation();
                if (e.srcElement.id != "popupBlack") {
                    return;
                }
                aroundClick();
            }
            if(document.getElementById("PopupContainer") != null){
            	document.body.removeChild(document.getElementById("PopupContainer"));
            }
            document.body.appendChild(popupContainer.querySelector("#PopupContainer"));
        }

        return {
            init: init,
            show: show,
            hide: hide,
            disableActionBtns: disableActionBtns,
            enableActionBtns: enableActionBtns,
            prepareOptions: prepareOptions,
            onShow: null,
            onBeforeShow:null,
            onHide: null,
            getVisiblePopup:function(){
            	return visiblePopup;
            }
        }
    }();
    window.Popup = popup;
})();
